'''
Created on Dec 14, 2017

@author: mmp
'''

from scipy import spatial

if __name__ == '__main__':
	vect_real = [[78, 56],[77, 56],[76, 57],[76, 53],[55, 51],[50, 36],[49, 35],[26, 11]]
	vect_data = [[78, 56],[77, 56],[76, 57],[76, 53],[55, 51],[50, 36],[49, 35],[35, 0],[31, 4],[26, 11],[19, 0],[15, 2],[14, 0],[13, 1],[12, 0],[12, 0],[11, 1],[11, 1],[11, 0],[11, 0],[11, 0],[10, 0],[9, 0],[9, 0],[9, 0],[9, 0],[9, 0],[8, 0],[8, 0],[8, 0],[8, 0],[8, 0],[7, 2],[7, 2],[7, 1],[7, 1],[7, 1],[7, 1],[7, 1],[7, 0],[6, 2],[6, 1],[6, 1],[6, 0],[6, 0],[6, 0],[6, 0],[6, 0],[6, 0],[6, 0],[6, 0],[6, 0],[6, 0],[5, 2],[5, 1],[5, 0],[5, 0],[5, 0],[5, 0],[5, 0],[5, 0],[5, 0],[5, 0],[5, 0],[4, 3],[4, 2],[4, 1],[4, 1],[4, 1],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[4, 0],[3, 1],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[3, 0],[2, 1],[2, 1],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[2, 0],[1, 0],[1, 0],[1, 0],[1, 0],[1, 0],[1, 0],[1, 0],[0, 2],[0, 2],[0, 1],[0, 0],[0, 0]]

	vect_clean = []
	for vect_temp in vect_data:
		if (len(vect_clean) == 0):
			vect_clean.append(vect_temp)
		elif (vect_clean[-1][0] != vect_temp[0] or vect_clean[-1][1] != vect_temp[1]):
			vect_clean.append(vect_temp)
			
	for i in range(0, len(vect_real)):
		for x in range(0, len(vect_clean)):
			if (1 - spatial.distance.cosine(vect_real[i], vect_data[x]) > 0.9):
				print("[{}-{}] - [{}-{}] {}".format(vect_real[i][0], vect_real[i][1], vect_clean[x][0], vect_clean[x][1], 1 - spatial.distance.cosine(vect_real[i], vect_data[x])))